// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bangazon.Migrations
{
    [DbContext(typeof(BangazonDbContext))]
    [Migration("20240828131502_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bangazon.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Household Essentials"
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(2001),
                            Status = false,
                            Total = 749.98m,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Bangazon.Models.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            Price = 299.99m,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            Price = 200.00m,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 1,
                            Price = 40.00m,
                            ProductId = 3,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 1,
                            Price = 105.00m,
                            ProductId = 5,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 5,
                            OrderId = 1,
                            Price = 50.00m,
                            ProductId = 6,
                            Quantity = 5
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Ultra HD 4K Smart TV with HDR.",
                            Image = "https://m.media-amazon.com/images/I/91Hk42lTFaL.jpg",
                            Name = "4K Smart TV",
                            Price = 299.99m,
                            QuantityAvailable = 15,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Over-ear headphones with noise cancellation.",
                            Image = "https://media.musicarts.com/is/image/MMGS7/M07377000000000-00-720x720.jpg",
                            Name = "Noise-Canceling Headphones",
                            Price = 199.99m,
                            QuantityAvailable = 30,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Latest model smartphone with high resolution camera.",
                            Image = "https://image-us.samsung.com/us/smartphones/galaxy-s24/all-gallery/01_E3_TitaniumBlack_Lockup_1600x1200.jpg?$product-details-jpg$",
                            Name = "Smartphone",
                            Price = 499.99m,
                            QuantityAvailable = 20,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Next-generation gaming console with 4K support.",
                            Image = "https://m.media-amazon.com/images/I/71HESRbyxDL.jpg",
                            Name = "Gaming Console",
                            Price = 399.99m,
                            QuantityAvailable = 10,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "Genuine leather jacket with a classic design.",
                            Image = "https://gearmoose.com/wp-content/uploads/2019/05/filson-leather-short-cruiser-jacket.jpg",
                            Name = "Leather Jacket",
                            Price = 200.00m,
                            QuantityAvailable = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Comfortable 100% cotton T-shirt.",
                            Image = "https://cdn11.bigcommerce.com/s-lk0gwzb/images/stencil/1280x1280/products/1645/9513/athleticheather-front__83530__24374_8135__17315.1708459759.jpg?c=2",
                            Name = "Cotton T-shirt",
                            Price = 20.00m,
                            QuantityAvailable = 50,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "Stylish and durable denim jeans.",
                            Image = "https://i.etsystatic.com/11147089/r/il/4bc917/3294441088/il_570xN.3294441088_dx4j.jpg",
                            Name = "Denim Jeans",
                            Price = 40.00m,
                            QuantityAvailable = 25,
                            UserId = 4
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Description = "Lightweight running shoes with excellent grip.",
                            Image = "https://cdn.thewirecutter.com/wp-content/media/2023/09/running-shoes-2048px-5946.jpg?auto=webp&quality=75&width=1024",
                            Name = "Running Shoes",
                            Price = 79.99m,
                            QuantityAvailable = 40,
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "Effective dish soap for grease removal.",
                            Image = "https://images.thdstatic.com/productImages/c08b33d2-32a5-449a-b0a8-25425d3729b5/svn/dawn-dish-soap-003077209398-fa_600.jpg",
                            Name = "Dish Soap",
                            Price = 10.50m,
                            QuantityAvailable = 100,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Description = "Highly absorbent paper towels.",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQkW2hEVTJ5yu4V7h1Toy3MA2lZNovOFnz3Sw&s",
                            Name = "Paper Towels",
                            Price = 5.00m,
                            QuantityAvailable = 80,
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Description = "High-efficiency laundry detergent.",
                            Image = "https://images.thdstatic.com/productImages/d31d06e3-b0d3-4edb-a4c0-b599ec2e4de2/svn/gain-laundry-detergents-003700077196-64_600.jpg",
                            Name = "Laundry Detergent",
                            Price = 12.00m,
                            QuantityAvailable = 60,
                            UserId = 2
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            Description = "Multi-surface cleaning spray.",
                            Image = "https://images.thdstatic.com/productImages/e5c920e1-3d7c-431f-ad73-048e3070d5da/svn/simple-green-all-purpose-cleaners-2710001213033-64_1000.jpg",
                            Name = "Cleaning Spray",
                            Price = 7.50m,
                            QuantityAvailable = 70,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Bangazon.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("Role")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice.smith@example.com",
                            FirstName = "Alice",
                            LastName = "Smith",
                            Role = true
                        },
                        new
                        {
                            Id = 2,
                            Email = "bob.johnson@example.com",
                            FirstName = "Bob",
                            LastName = "Johnson",
                            Role = false
                        });
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsId")
                        .HasColumnType("integer");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("Bangazon.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bangazon.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
